{"version":3,"file":"static/js/190.6da67cca.chunk.js","mappings":"sSAEMA,E,MAASC,GAAAA,OAAa,CAC1BC,QAAS,iCAGEC,EAAiB,mCAAG,6GAENH,EAAOI,IAC5B,gEAH2B,cAEvBC,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,yDAOtBC,QAAQC,OAAR,OAPsB,yDAAH,qDAWjBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENX,EAAOI,IAAP,8BACEO,EADF,wFAFM,cAEvBN,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,yDAOtBC,QAAQC,OAAR,OAPsB,yDAAH,sDAWjBG,EAAe,mCAAG,WAAMC,GAAN,gGAEJb,EAAOI,IAAP,iBACXS,EADW,6DAFI,cAErBR,EAFqB,yBAKpBA,EAASC,MALW,yDAOpBE,QAAQC,OAAR,OAPoB,yDAAH,sDAWfK,EAAY,mCAAG,WAAMD,GAAN,gGAEDb,EAAOI,IAAP,iBACXS,EADW,qEAFC,cAElBR,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,yDAOjBP,QAAQC,OAAR,OAPiB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJb,EAAOI,IAAP,iBACXS,EADW,4EAFI,cAErBR,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,yDAOpBC,QAAQC,OAAR,OAPoB,yDAAH,qD,qIChDfQ,EAAUC,EAAAA,EAAAA,GAAH,mFAKPC,EAAOD,EAAAA,EAAAA,GAAH,gDAIJE,EAAQF,EAAAA,EAAAA,GAAH,kEAKLG,EAAOH,EAAAA,EAAAA,EAAH,kE,SCXF,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQZ,GAAYa,EAAAA,EAAAA,MAAZb,QAMR,OAJAc,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBH,GAASe,KAAKH,EAC/B,GAAE,CAACZ,KAGF,gCACGW,IACC,SAACP,EAAD,UACGO,EAAQK,KAAI,SAAAC,GACX,OACE,UAACX,EAAD,YACE,SAACC,EAAD,UAAQU,EAAOC,UACf,SAACV,EAAD,UAAOS,EAAOE,YAFLF,EAAOG,GAKrB,MAGe,IAAnBT,EAAQU,SACP,SAACb,EAAD,4DAIP,C","sources":["api/movies.js","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await client.get(\n      '/trending/movie/day?api_key=29ae5d4d8930c615329fddbb049af986'\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await client.get(\n      `/search/movie?query=${query}&api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/credits?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/reviews?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p`\n  color: #ffffff;\n  margin-bottom: 5px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../api/movies';\nimport { Wrapper, Text, Item, Title } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <Wrapper>\n          {reviews.map(review => {\n            return (\n              <Item key={review.id}>\n                <Title>{review.author}</Title>\n                <Text>{review.content}</Text>\n              </Item>\n            );\n          })}\n        </Wrapper>\n      )}\n      {reviews.length === 0 && (\n        <Text>We don't have information about the reviews</Text>\n      )}\n    </>\n  );\n}\n"],"names":["client","axios","baseURL","getTrendingMovies","get","response","data","results","Promise","reject","getMoviesBySearch","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","Wrapper","styled","Item","Title","Text","Reviews","useState","reviews","setReviews","useParams","useEffect","then","map","review","author","content","id","length"],"sourceRoot":""}