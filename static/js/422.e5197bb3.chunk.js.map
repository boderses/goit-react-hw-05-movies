{"version":3,"file":"static/js/422.e5197bb3.chunk.js","mappings":"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","sources":["api/movies.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await client.get(\n      '/trending/movie/day?api_key=29ae5d4d8930c615329fddbb049af986'\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await client.get(\n      `/search/movie?query=${query}&api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/credits?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/reviews?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 20px;\n`;\n\nexport const Button = styled(Link)`\n  text-decoration: none;\n  padding: 5px;\n  color: #ffffff;\n  border: 1px solid #ffffff;\n  border-radius: 10px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  display: flex;\n`;\n\nexport const WrapperImg = styled.div`\n  margin-left: 15px;\n`;\n\nexport const Title = styled.h1`\n  color: #ffffff;\n  margin-bottom: 15px;\n`;\n\nexport const Title2 = styled.h2`\n  color: #ffffff;\n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n  color: #ffffff;\n  margin-bottom: 15px;\n`;\n\nexport const LinkItem = styled(NavLink)`\n  text-decoration: none;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    color: #ff6b08;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../api/movies';\nimport {\n  Button,\n  Wrapper,\n  WrapperImg,\n  Container,\n  Title,\n  Title2,\n  Text,\n  LinkItem,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const getGenreNames = genres => genres.map(genre => genre.name).join(', ');\n\n  return (\n    <Container>\n      <Button to={location?.state?.from ?? '/'}>Go back</Button>\n      {movie && (\n        <Wrapper>\n          <div>\n            {movie.poster_path && (\n              <img\n                src={`https://www.themoviedb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n            )}\n          </div>\n          <WrapperImg>\n            {movie.title && movie.release_date && (\n              <Title>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </Title>\n            )}\n\n            <Text>User score: {movie.vote_average * 10}%</Text>\n            <Title2>Overview</Title2>\n            <Text>{movie.overview}</Text>\n            <Title2>Genres</Title2>\n            {movie.genres && <Text>{getGenreNames(movie.genres)}</Text>}\n          </WrapperImg>\n        </Wrapper>\n      )}\n      <div>\n        <Text>Additional information</Text>\n        <LinkItem to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n          <p>Cast</p>\n        </LinkItem>\n        <LinkItem to=\"reviews\" state={{ from: location?.state?.from ?? '/' }}>\n          <p>Reviews</p>\n        </LinkItem>\n      </div>\n\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["client","axios","baseURL","getTrendingMovies","get","response","data","results","Promise","reject","getMoviesBySearch","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","Container","styled","Button","Link","Wrapper","WrapperImg","Title","Title2","Text","LinkItem","NavLink","MovieDetails","useState","movie","setMovie","useParams","location","useLocation","useEffect","then","genres","to","state","from","poster_path","src","alt","title","release_date","slice","vote_average","overview","map","genre","name","join"],"sourceRoot":""}