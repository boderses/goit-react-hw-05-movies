{"version":3,"file":"static/js/184.604f02fa.chunk.js","mappings":"sSAEMA,E,MAASC,GAAAA,OAAa,CAC1BC,QAAS,iCAGEC,EAAiB,mCAAG,6GAENH,EAAOI,IAC5B,gEAH2B,cAEvBC,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,yDAOtBC,QAAQC,OAAR,OAPsB,yDAAH,qDAWjBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENX,EAAOI,IAAP,8BACEO,EADF,wFAFM,cAEvBN,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,yDAOtBC,QAAQC,OAAR,OAPsB,yDAAH,sDAWjBG,EAAe,mCAAG,WAAMC,GAAN,gGAEJb,EAAOI,IAAP,iBACXS,EADW,6DAFI,cAErBR,EAFqB,yBAKpBA,EAASC,MALW,yDAOpBE,QAAQC,OAAR,OAPoB,yDAAH,sDAWfK,EAAY,mCAAG,WAAMD,GAAN,gGAEDb,EAAOI,IAAP,iBACXS,EADW,qEAFC,cAElBR,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,yDAOjBP,QAAQC,OAAR,OAPiB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJb,EAAOI,IAAP,iBACXS,EADW,4EAFI,cAErBR,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,yDAOpBC,QAAQC,OAAR,OAPoB,yDAAH,qD,oIC7Cb,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaf,IAAI,SACtC,GAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJN,IACFX,EAAAA,EAAAA,IAAkBW,GAAcO,KAAKJ,EAExC,GAAE,CAACH,IASJ,OACE,4BACE,kBAAMQ,SATW,SAAAC,GACnBA,EAAMC,iBACN,IAAMpB,EAAQmB,EAAME,cAAcC,SAASC,WAAWC,MACtD,GAAqB,KAAjBxB,EAAMyB,OAAe,OAAOC,MAAM,mBACtCjB,EAAgB,CAAET,MAAOA,GAC1B,EAIG,WACE,mBAAQ2B,KAAK,SAAb,UACE,SAAC,MAAD,CAAUC,KAAK,UAGjB,kBACED,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,kBAGRpB,IACC,wBACGA,EAAOqB,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,CAEEC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAMxB,GAHjB,UAKE,wBAAKoB,EAAMK,SAJNL,EAAME,GAOhB,MAGc,IAAlBxB,EAAO4B,SAAgB,kDAG7B,C","sources":["api/movies.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await client.get(\n      '/trending/movie/day?api_key=29ae5d4d8930c615329fddbb049af986'\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await client.get(\n      `/search/movie?query=${query}&api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/credits?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/reviews?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { getMoviesBySearch } from '../../api/movies';\nimport { FcSearch } from 'react-icons/fc';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (currentQuery) {\n      getMoviesBySearch(currentQuery).then(setMovies);\n    }\n  }, [currentQuery]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.currentTarget.elements.inputValue.value;\n    if (query.trim() === '') return alert('no search query');\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <FcSearch size=\"30\" />\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"inputValue\"\n        />\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <Link\n                key={movie.id}\n                to={`${movie.id}`}\n                state={{ from: location }}\n              >\n                <li>{movie.title}</li>\n              </Link>\n            );\n          })}\n        </ul>\n      )}\n      {movies.length === 0 && <p>Enter the movie name</p>}\n    </div>\n  );\n}\n"],"names":["client","axios","baseURL","getTrendingMovies","get","response","data","results","Promise","reject","getMoviesBySearch","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","Movies","useSearchParams","searchParams","setSearchParams","currentQuery","useState","movies","setMovies","location","useLocation","useEffect","then","onSubmit","event","preventDefault","currentTarget","elements","inputValue","value","trim","alert","type","size","autoComplete","autoFocus","placeholder","name","map","movie","to","id","state","from","title","length"],"sourceRoot":""}