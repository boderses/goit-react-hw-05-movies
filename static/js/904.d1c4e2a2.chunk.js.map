{"version":3,"file":"static/js/904.d1c4e2a2.chunk.js","mappings":"sSAEMA,E,MAASC,GAAAA,OAAa,CAC1BC,QAAS,iCAGEC,EAAiB,mCAAG,6GAENH,EAAOI,IAC5B,gEAH2B,cAEvBC,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,yDAOtBC,QAAQC,OAAR,OAPsB,yDAAH,qDAWjBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENX,EAAOI,IAAP,8BACEO,EADF,wFAFM,cAEvBN,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,yDAOtBC,QAAQC,OAAR,OAPsB,yDAAH,sDAWjBG,EAAe,mCAAG,WAAMC,GAAN,gGAEJb,EAAOI,IAAP,iBACXS,EADW,6DAFI,cAErBR,EAFqB,yBAKpBA,EAASC,MALW,yDAOpBE,QAAQC,OAAR,OAPoB,yDAAH,sDAWfK,EAAY,mCAAG,WAAMD,GAAN,gGAEDb,EAAOI,IAAP,iBACXS,EADW,qEAFC,cAElBR,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,yDAOjBP,QAAQC,OAAR,OAPiB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJb,EAAOI,IAAP,iBACXS,EADW,4EAFI,cAErBR,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,yDAOpBC,QAAQC,OAAR,OAPoB,yDAAH,qD,mIChDfQ,EAAUC,EAAAA,EAAAA,GAAH,mFAKPC,EAAOD,EAAAA,EAAAA,GAAH,8CAIJE,EAAOF,EAAAA,EAAAA,EAAH,kE,SCNF,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QAMR,OAJAY,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAaD,GAASa,KAAKH,EAC5B,GAAE,CAACV,KAGF,gCACGE,IACC,SAACE,EAAD,UACGF,EAAKY,KAAI,SAAAC,GACR,OACE,UAACT,EAAD,WACGS,EAAMC,cACL,gBACEC,IAAG,8CAAyCF,EAAMC,cAClDE,IAAKH,EAAMI,QAGb,SAACZ,EAAD,wBAEF,UAACA,EAAD,oBAAaQ,EAAMI,SACnB,UAACZ,EAAD,yBAAkBQ,EAAMK,eAVfL,EAAMM,GAapB,MAGY,IAAhBnB,EAAKoB,SACJ,SAACf,EAAD,yDAIP,C","sources":["api/movies.js","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await client.get(\n      '/trending/movie/day?api_key=29ae5d4d8930c615329fddbb049af986'\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await client.get(\n      `/search/movie?query=${query}&api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/credits?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await client.get(\n      `/movie/${movieId}/reviews?api_key=29ae5d4d8930c615329fddbb049af986&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  margin-left: 10px;\n`;\n\nexport const Text = styled.p`\n  color: #ffffff;\n  margin-bottom: 5px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../api/movies';\nimport { Wrapper, Item, Text } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <Wrapper>\n          {cast.map(actor => {\n            return (\n              <Item key={actor.id}>\n                {actor.profile_path ? (\n                  <img\n                    src={`https://www.themoviedb.org/t/p/w500/${actor.profile_path}`}\n                    alt={actor.name}\n                  />\n                ) : (\n                  <Text>No photo</Text>\n                )}\n                <Text>Name: {actor.name}</Text>\n                <Text>Character: {actor.character}</Text>\n              </Item>\n            );\n          })}\n        </Wrapper>\n      )}\n      {cast.length === 0 && (\n        <Text>We don't have information about the cast</Text>\n      )}\n    </>\n  );\n}\n"],"names":["client","axios","baseURL","getTrendingMovies","get","response","data","results","Promise","reject","getMoviesBySearch","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","Wrapper","styled","Item","Text","Cast","useState","setCast","useParams","useEffect","then","map","actor","profile_path","src","alt","name","character","id","length"],"sourceRoot":""}